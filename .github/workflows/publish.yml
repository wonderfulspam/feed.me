on:
  schedule:
    # At minute 23 past hour 5, 9, 14, 18, and 22 (UTC)
    # Optimized for being up to date at certain key times during
    # the day (waking up, lunch break, finishing work). Off-hour
    # minute chosen to reduce risk of job getting delayed due to
    # load.
    - cron: "23 5,9,14,18,22 * * *"
  workflow_dispatch:
  pull_request:
  push:
    branches: [main]

jobs:
  build_and_publish:
    name: Build site and publish
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        if: github.event_name == 'push' || github.event_name == 'pull_request'
        uses: dtolnay/rust-toolchain@stable
      - name: Cache Rust dependencies and build artifacts
        if: github.event_name == 'push' || github.event_name == 'pull_request'
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: "spacefeeder -> target"
      - name: Build and install spacefeeder from source
        if: github.event_name == 'push' || github.event_name == 'pull_request'
        shell: bash
        run: "cd spacefeeder && cargo build --release --locked && sudo cp target/release/spacefeeder /usr/local/bin/"
      - name: Install spacefeeder from release
        if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
        shell: bash
        run: "curl --proto '=https' --tlsv1.2 -LsSf https://github.com/wonderfulspam/feed.me/releases/latest/download/spacefeeder-installer.sh | sh"
      - name: Build site
        run: "spacefeeder build"
      - name: Publish to Netlify
        if: github.event_name != 'pull_request'
        env:
          NETLIFY_DEPLOY_TOKEN: ${{ secrets.NETLIFY_DEPLOY_TOKEN }}
          SITE_URL: "feed-me-feeds.netlify.com"
        run: |
          zip -r site.zip public
          curl -H "Content-Type: application/zip" \
             -H "Authorization: Bearer $NETLIFY_DEPLOY_TOKEN" \
             --data-binary "@site.zip" \
             "https://api.netlify.com/api/v1/sites/${SITE_URL}/deploys"
          rm site.zip
